#!/usr/bin/env bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

PS1="\[\e[35m\]\t\[\e[m\] \[\e[36m\]\u\[\e[m\]@\[\e[32m\]\h\[\e[m\]:\[\e[33m\]\w\[\e[m\]$ "

imports=( "vault.sh" "alias.sh" "k8s.sh" "git.sh" "go.sh" "mac.sh" "docker.sh" )
for i in "${imports[@]}"
 do
    # shellcheck disable=SC1090
    source "$HOME/.config/bash/$i"
done

if [[ $OSTYPE == 'darwin'* ]]; then
    # Nix, darwin need this
    if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
    # shellcheck source=/dev/null
    source '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
    fi
fi


# funcs
extract () {
   if [ -f "$1" ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf "$1"    ;;
           *.tar.gz)    tar xvzf "$1"    ;;
           *.bz2)       bunzip2 "$1"     ;;
           *.rar)       unrar x "$1"       ;;
           *.gz)        gunzip "$1"   ;;
           *.tar)       tar xvf "$1"    ;;
           *.tbz2)      tar xvjf "$1"   ;;
           *.tgz)       tar xvzf "$1"  ;;
           *.zip)       unzip "$1"      ;;
           *.Z)         uncompress "$1"  ;;
           *.7z)        7z x "$1"        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
 }

#export EDITOR=code # switch this to other config # is in conflict with home-manager
export PATH=$PATH:$RUSTBIN:/home/rip/code/bin/

# rust
#source $HOME/.cargo/env

# direnv

if command -v direnv &> /dev/null
then
    eval "$(direnv hook bash)"
fi